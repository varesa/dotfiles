# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

exec systemctl --user import-environment

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
#set $term gnome-terminal
set $term ~/.config/sway/launch_cgroup.sh alacritty

set $focused_display "$(swaymsg -t get_outputs -p | grep Output | awk '{print NR-1 $s}' | grep focused | cut -c 1)"

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu_path dmenu_path | dmenu -m $focused_display | xargs swaymsg exec --
set $menu_windows "python3 ~/.config/sway/switch_window.py" 


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg #404040 solid_color
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

## See ~/.localsway

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

set $locker 'swaylock -f -e -c 111111'
set $suspend 'swaylock -f -e -c 111111; systemctl suspend'

bindsym $mod+g exec $locker
bindsym $mod+Shift+g exec $suspend

#exec swayidle -w \
#    timeout 300 'swaymsg "output * dpms off"' \
#    resume 'swaymsg "output * dpms on"' \
#    timeout 600 "$locker" \
#    timeout 15 'if pgrep -x swaylock; then swaymsg "output * dpms off"; fi' \
#    before-sleep "$locker"


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "*" {
    xkb_layout fi
    xkb_options caps:ctrl_modifier
}

input "2:7:SynPS/2_Synaptics_TouchPad" {
    tap enabled
    natural_scroll enabled
}

bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# https://www.reddit.com/r/swaywm/comments/fk08lu/nicer_brightness_control/
# set brightness logarithmically by factor 1.4
# .72 is just slightly bigger than 1 / 1.4
bindsym $mod+F3 exec light -S "$(light -G | awk '{ print int($1 / 1.4) }')"
bindsym $mod+F4 exec light -S "$(light -G | awk '{ print int(($1 + .72) * 1.4) }')"


### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+Shift+d exec $menu_path
    bindsym $mod+d exec ~/.config/sway/launch_apps.sh
    bindsym Alt+Tab exec ~/.config/sway/alttab.sh

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+Left focus left

    bindsym $mod+$down focus down
    bindsym $mod+Down focus down

    bindsym $mod+$up focus up
    bindsym $mod+Up focus up

    bindsym $mod+$right focus right
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+Left move left
    
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+Down move down

    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+Up move up

    bindsym $mod+Shift+$right move right
    bindsym $mod+Shift+Right move right

#
# Workspaces:
#

    bindsym $mod+section       exec swaymsg                   workspace $(swaymsg -t get_workspaces | jq -r '.[].name' | dmenu -m $focused_display)
    bindsym $mod+Shift+section exec swaymsg move container to workspace $(swaymsg -t get_workspaces | jq -r '.[].name' | dmenu -m $focused_display)

    exec ~/.config/sway/init_workspaces.sh

    # switch to workspace
    set $workspace exec ~/.config/sway/switch_workspace.sh
    bindsym $mod+1 $workspace 1
    bindsym $mod+2 $workspace 2
    bindsym $mod+3 $workspace 3
    bindsym $mod+4 $workspace 4
    bindsym $mod+5 $workspace 5
    bindsym $mod+6 $workspace 6
    bindsym $mod+7 $workspace 7
    bindsym $mod+8 $workspace 8
    bindsym $mod+9 $workspace 9
    bindsym $mod+0 $workspace 10

    # move focused container to workspace
    set $move_to_workspace exec ~/.config/sway/move_to_workspace.sh

    bindsym $mod+Shift+1 $move_to_workspace 1
    bindsym $mod+Shift+2 $move_to_workspace 2
    bindsym $mod+Shift+3 $move_to_workspace 3
    bindsym $mod+Shift+4 $move_to_workspace 4
    bindsym $mod+Shift+5 $move_to_workspace 5
    bindsym $mod+Shift+6 $move_to_workspace 6
    bindsym $mod+Shift+7 $move_to_workspace 7
    bindsym $mod+Shift+8 $move_to_workspace 8
    bindsym $mod+Shift+9 $move_to_workspace 9
    bindsym $mod+Shift+0 $move_to_workspace 10
   
    # rename active workspace
    bindsym $mod+Shift+n exec ~/.config/sway/rename_workspace.sh
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 50px # hjkl
    bindsym Left resize shrink width 50px # arrows

    bindsym $down resize grow height 50px
    bindsym Down resize grow height 50px

    bindsym $up resize shrink height 50px
    bindsym Up resize shrink height 50px

    bindsym $right resize grow width 50px
    bindsym Right resize grow width 50px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %H:%M:%S %p'; do sleep 1; done
    #status_command i3status

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #323232 #323232 #5c5c5c
    }
}

set $screenshot_region slurp | grim -g - $(xdg-user-dir PICTURES)/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')
set $screenshot_all grim $(xdg-user-dir PICTURES)/$(date +'screenshot_%Y-%m-%d-%H%M%S.png')

bindsym Shift+print exec $screenshot_region
bindsym Shift+$mod+s exec $screenshot_region
bindsym print exec $screenshot_all

# Application overrides
#for_window [class="^Chrome$" title=" - Google Chrome$"] border none
#for_window [class="Google-chrome" title="Google Chrome"] border none
for_window [title=" - Google Chrome$"] border none
for_window [title="watch .*/get_opsgenie_alerts.py$"] border none
no_focus [title="xfce4-notifyd"]
no_focus [title="TelegramDesktop"]
for_window [title="TelegramDesktop"] floating enable, border none
for_window [title="^Steam"] border none
for_window [title="^Steam "] floating enable
for_window [title="^SpeedCrunch"] floating enable
# Thunderbird
for_window [title="^Sending Message - "] floating enable
# Dia, etc.
for_window [title="^Properties: "] floating enable
# Firefox
for_window [title="^Opening "] floating enable
for_window [title="^Firefox - Choose "] floating enable
# Jetbrains splash
for_window [title="^win0"] floating enable
# Slack call overlay
for_window [title="Slack \| mini panel"] floating enable
# PyCharm, etc.
for_window [title="^Add File to Git"] floating enable
for_window [title="^Rename$"] floating enable
for_window [title="^Delete$"] floating enable

for_window [title="^Firefox — Sharing Indicator$"] floating enable
for_window [title="JACK Audio Connection Kit .* QjackCtl"] floating enable
for_window [title="Welcome to CLion"] floating enable

# Fix font rendering in GTK apps
exec /usr/libexec/gsd-xsettings

# Polkit authentication/authorization
exec /usr/libexec/polkit-gnome-authentication-agent-1

# Keyring
exec gnome-keyring-daemon --start

# Network connections
exec nm-applet --indicator

include /usr/local/etc/sway/config.d/*
include ~/.config/sway/config.d/*
include ~/.localsway
